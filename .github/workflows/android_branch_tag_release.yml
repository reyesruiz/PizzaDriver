name: Branch Tag Release
on:
  workflow_dispatch:
    branches:
      - main
      - 2.0.x

jobs:
  branch-tag-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.AUTO_COMMIT }}
          ref: ${{ github.event.inputs.git_tag }}

      - name: version major
        id: version_major
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: 'app/version.properties'
          property: 'VERSION_MAJOR'
      - name: version minor
        id: version_minor
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: 'app/version.properties'
          property: 'VERSION_MINOR'
      - name: version patch
        id: version_patch
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: 'app/version.properties'
          property: 'VERSION_PATCH'

      - name: Access PLACES_API_KEY
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: echo API_KEY=\"$API_KEY\" > ./local.properties

      - name: Build all artifacts
        id: buildAllApks
        run: ./gradlew build assembleRelease bundleRelease

      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }} # IMPORTANT: run Android Test Report regardless

      - name: Sign apk artifact
        id: signArtifactApk
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Sign bundle artifact
        id: signArtifactBundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: apk_name
        id: apk_name
        run: echo "##[set-output name=file_name;]$(jq -r '.elements[].outputFile' app/build/outputs/apk/release/output-metadata.json)"

      - name: bundle_name
        id: bundle_name
        run: echo "##[set-output name=file_name;]$(jq -r '.elements[].outputFile' app/build/outputs/apk/release/output-metadata.json|sed 's/.apk/.aab/')"

      - name: Upload our APK
        uses: actions/upload-artifact@master
        with:
          name: ${{steps.apk_name.outputs.file_name}}
          path: ${{steps.signArtifactApk.outputs.signedReleaseFile}}

      - name: Upload our Bundle
        uses: actions/upload-artifact@master
        with:
          name: ${{steps.bundle_name.outputs.file_name}}
          path: ${{steps.signArtifactBundle.outputs.signedReleaseFile}}

      - name: Upload lint report
        uses: actions/upload-artifact@master
        with:
          name: 'lint-results.html'
          path: app/build/reports/lint-results.html

      - name: tag name
        id: tag_name
        run: echo "##[set-output name=value;]${{ steps.version_major.outputs.value }}.${{ steps.version_minor.outputs.value }}.${{ steps.version_patch.outputs.value }}"

      - name: tag
        id: tag
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.tag_name.outputs.value }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{steps.signArtifactApk.outputs.signedReleaseFile}}, ${{steps.signArtifactBundle.outputs.signedReleaseFile}}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag.outputs.new_tag }}
